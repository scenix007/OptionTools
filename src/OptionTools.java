
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Desktop;
import java.net.URI;
import javax.swing.JOptionPane;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author scenix
 */
public class OptionTools extends javax.swing.JFrame {

    /**
     * Creates new form OptionTools
     */
    public OptionTools() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txt_stock_price = new javax.swing.JTextField();
        txt_volatility = new javax.swing.JTextField();
        txt_days_to_expire = new javax.swing.JTextField();
        txt_riskfree_rate = new javax.swing.JTextField();
        lbl_sc = new javax.swing.JLabel();
        txt_strike_price = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lbl_sp = new javax.swing.JLabel();
        lbl_img = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("OptionTools by 昱铭");
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        jLabel1.setText("当前股价");
        jLabel1.setToolTipText("单位USD");

        jLabel2.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        jLabel2.setText("历史波动率");
        jLabel2.setToolTipText("假如波动率60%,这里要填0.6哦");

        jLabel3.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        jLabel3.setText("期权到期天数");
        jLabel3.setToolTipText("周六周日也一起数上吧,要不然太麻烦了");

        jLabel4.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        jLabel4.setText("无风险利率");
        jLabel4.setToolTipText("可以填余额宝的0.05");

        txt_stock_price.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        txt_stock_price.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        txt_stock_price.setText("90.5");
        txt_stock_price.setToolTipText("");
        txt_stock_price.setName("txt_stock_price"); // NOI18N
        txt_stock_price.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_stock_priceKeyPressed(evt);
            }
        });

        txt_volatility.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        txt_volatility.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        txt_volatility.setText("0.6");
        txt_volatility.setToolTipText("");
        txt_volatility.setName("txt_stock_price"); // NOI18N
        txt_volatility.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_volatilityKeyPressed(evt);
            }
        });

        txt_days_to_expire.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        txt_days_to_expire.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        txt_days_to_expire.setText("30");
        txt_days_to_expire.setToolTipText("");
        txt_days_to_expire.setName("txt_stock_price"); // NOI18N
        txt_days_to_expire.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_days_to_expireKeyPressed(evt);
            }
        });

        txt_riskfree_rate.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        txt_riskfree_rate.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        txt_riskfree_rate.setText("0.05");
        txt_riskfree_rate.setToolTipText("");
        txt_riskfree_rate.setName("txt_stock_price"); // NOI18N
        txt_riskfree_rate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_riskfree_rateKeyPressed(evt);
            }
        });

        lbl_sc.setFont(new java.awt.Font("Microsoft YaHei", 1, 14)); // NOI18N
        lbl_sc.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lbl_sc.setText("0%");
        lbl_sc.setToolTipText("可以填余额宝的0.05");

        txt_strike_price.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        txt_strike_price.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        txt_strike_price.setText("60");
        txt_strike_price.setToolTipText("");
        txt_strike_price.setName("txt_stock_price"); // NOI18N
        txt_strike_price.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_strike_priceKeyPressed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        jLabel6.setText("SP/BC 成功率");
        jLabel6.setToolTipText("到期时股价大于行权价的概率");

        jLabel7.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        jLabel7.setText("SC/BP 成功率");
        jLabel7.setToolTipText("到期时股价小于行权价的概率");

        jLabel8.setFont(new java.awt.Font("Microsoft YaHei", 0, 14)); // NOI18N
        jLabel8.setText("行权价");
        jLabel8.setToolTipText("");

        lbl_sp.setFont(new java.awt.Font("Microsoft YaHei", 1, 14)); // NOI18N
        lbl_sp.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lbl_sp.setText("0%");
        lbl_sp.setToolTipText("可以填余额宝的0.05");

        lbl_img.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tesla.jpg"))); // NOI18N
        lbl_img.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl_imgMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbl_imgMouseEntered(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(lbl_sp, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                        .addComponent(lbl_sc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(txt_stock_price, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                    .addComponent(txt_volatility)
                    .addComponent(txt_days_to_expire, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_riskfree_rate)
                    .addComponent(txt_strike_price, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(18, 18, 18)
                .addComponent(lbl_img, javax.swing.GroupLayout.PREFERRED_SIZE, 439, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt_stock_price, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_volatility))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_days_to_expire, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_riskfree_rate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_strike_price)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_sp, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_sc, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38))
            .addGroup(layout.createSequentialGroup()
                .addComponent(lbl_img, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_stock_priceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_stock_priceKeyPressed
        // TODO add your handling code here:
        if(10 == evt.getKeyCode()) {
            do_calc();
        }
    }//GEN-LAST:event_txt_stock_priceKeyPressed

    private void txt_volatilityKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_volatilityKeyPressed
        // TODO add your handling code here:
        if(10 == evt.getKeyCode()) {
            do_calc();
        }
    }//GEN-LAST:event_txt_volatilityKeyPressed

    private void txt_days_to_expireKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_days_to_expireKeyPressed
        // TODO add your handling code here:
        if(10 == evt.getKeyCode()) {
            do_calc();
        }
    }//GEN-LAST:event_txt_days_to_expireKeyPressed

    private void txt_riskfree_rateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_riskfree_rateKeyPressed
        // TODO add your handling code here:
        if(10 == evt.getKeyCode()) {
            do_calc();
        }
    }//GEN-LAST:event_txt_riskfree_rateKeyPressed

    private void txt_strike_priceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_strike_priceKeyPressed
        // TODO add your handling code here:
        if(10 == evt.getKeyCode()) {
            do_calc();
        }
    }//GEN-LAST:event_txt_strike_priceKeyPressed

    //change mouse cursor to a little hand when mouse entered the image
    private void lbl_imgMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_imgMouseEntered
        // TODO add your handling code here:
        this.lbl_img.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_lbl_imgMouseEntered

    private void lbl_imgMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_imgMouseClicked
        // TODO add your handling code here:
        URI uri;
        try{
            uri = new URI("https://me.alipay.com/scenix");
            Desktop dtp = Desktop.getDesktop();
            dtp.browse(uri);
        }catch (Exception e){
            System.out.println("Exception when process uri");
            e.printStackTrace();
            JOptionPane.showMessageDialog(this.getContentPane(),
                    "请复制链接到浏览器并打开,帮助邵龙小伙伴实现梦想 https://me.alipay.com/scenix", "提示",
                    JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_lbl_imgMouseClicked

    
    int update_input(){
        // update stock price
        try{
            this.stock_price = Double.parseDouble(this.txt_stock_price.getText());
        }catch(Exception e){
            JOptionPane.showMessageDialog(this.getContentPane(),
                    "当前股价输入错误,请检查", "输入错误",
                    JOptionPane.ERROR_MESSAGE);
            return -1;
        }
        System.out.println("stock price updated with value " + this.stock_price);
        
        // update volatility
        try{
            this.volatility = Double.parseDouble(this.txt_volatility.getText());
        }catch(Exception e){
            JOptionPane.showMessageDialog(this.getContentPane(),
                    "波动率输入错误,请检查", "输入错误",
                    JOptionPane.ERROR_MESSAGE);
            return -1;
        }
        System.out.println("volatility updated with value " + this.volatility);
        
        // update days_to_expire
        try{
            this.days_to_expire = Double.parseDouble(this.txt_days_to_expire.getText());
        }catch(Exception e){
            JOptionPane.showMessageDialog(this.getContentPane(),
                    "期权到期天数输入错误,请检查", "输入错误",
                    JOptionPane.ERROR_MESSAGE);
            return -1;
        }
        System.out.println("days_to_expire updated with value " + this.days_to_expire);
        
        // update riskfree_rate
        try{
            this.riskfree_rate = Double.parseDouble(this.txt_riskfree_rate.getText());
        }catch(Exception e){
            JOptionPane.showMessageDialog(this.getContentPane(),
                    "无风险利率输入错误,请检查", "输入错误",
                    JOptionPane.ERROR_MESSAGE);
            return -1;
        }
        System.out.println("riskfree_rate updated with value " + this.riskfree_rate);       

        // update strike_pirce
        try{
            this.strike_price = Double.parseDouble(this.txt_strike_price.getText());
        }catch(Exception e){
            JOptionPane.showMessageDialog(this.getContentPane(),
                    "行权价输入错误,请检查", "输入错误",
                    JOptionPane.ERROR_MESSAGE);
            return -1;
        }
        System.out.println("strike_price updated with value " + this.strike_price);   
        return 0;
    }
    
    void do_calc(){
        if(0 != update_input()){
            return;
        }
        double avg = 0.0;
        double div = 0.0;
        double rate = 0.0;
        //calculate the average 
        {
            avg = (this.riskfree_rate - this.volatility * this.volatility / 2);
            avg = avg * this.days_to_expire / 365.0;
            avg = avg + Math.log(this.stock_price);
            System.out.println("avg is " + avg);
        }
        
        //calculate the standard divation
        {
            div = this.volatility * Math.sqrt(this.days_to_expire / 365.0);
            System.out.println("div is " + div);
        }
        
        //calculate the distribution
        {
            rate = this.normal_distribution(avg, div, Math.log(this.strike_price));
            System.out.println("rate is " + rate);

        }
        //display sc
        {
            this.lbl_sc.setText(String.format("%.2f%%", rate * 100));
            if(rate < 0.6){
                this.lbl_sc.setForeground(Color.red);
            } else if (rate < 0.75) {
                this.lbl_sc.setForeground(Color.ORANGE);
            }else if (rate < 0.9) {
                this.lbl_sc.setForeground(Color.YELLOW);
            }
            else {
                 this.lbl_sc.setForeground(Color.GREEN);
            }
            
            
        }
        //display sp
        {
            this.lbl_sp.setText(String.format("%.2f%%", (1.0 -rate) * 100));
            if((1.0 - rate) < 0.6){
                this.lbl_sp.setForeground(Color.red);
            } else if ((1.0 -rate) < 0.75) {
                this.lbl_sp.setForeground(Color.ORANGE);
            }else if ((1.0 -rate) < 0.9) {
                this.lbl_sp.setForeground(Color.YELLOW);
            }
            else {
                 this.lbl_sp.setForeground(Color.GREEN);
            }
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OptionTools.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OptionTools.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OptionTools.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OptionTools.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OptionTools().setVisible(true);
            }
        });

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel lbl_img;
    private javax.swing.JLabel lbl_sc;
    private javax.swing.JLabel lbl_sp;
    private javax.swing.JTextField txt_days_to_expire;
    private javax.swing.JTextField txt_riskfree_rate;
    private javax.swing.JTextField txt_stock_price;
    private javax.swing.JTextField txt_strike_price;
    private javax.swing.JTextField txt_volatility;
    // End of variables declaration//GEN-END:variables

    double stock_price = 0.0; //current stock price. can be updated by envent txt_stock_priceKeyPressed
    double volatility = 0.0; //stock historical volatility.
    double days_to_expire = 0.0; //the days left before the option expires.
    double riskfree_rate = 0.0; //the risk free interest rate
    double strike_price = 0.0; //the option strike price
    
    // calculate F(x) on a normal distribution where its average is avg, standard divation is div
    double normal_distribution(double avg, double div, double x){
        double a = 4.0 / (Math.sqrt(2.0 * Math.PI) * div );
        double form = Math.pow(Math.E, a * (x - avg));     
        return form / (1 + form);
    }
}
